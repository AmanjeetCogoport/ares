micronaut:
  application:
    name: ares
  server:
    port: 8086
    context-path: /payments
    cors:
      enabled: true
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
netty:
  default:
    allocator:
      max-order: 3
r2dbc:
  datasources:
    default:
      url: r2dbc:postgresql://cogo-book.cxmkfxrc30yc.ap-south-1.rds.amazonaws.com:5432/ares
      username: postgres
      password: postgres123
      dialect: POSTGRES

kafka:
  bootstrap:
    servers: localhost:29092
#    servers: b-1.cogoport-staging.ulogbt.c2.kafka.ap-south-1.amazonaws.com:9098,b-2.cogoport-staging.ulogbt.c2.kafka.ap-south-1.amazonaws.com:9098
#  security:
#    protocol: SASL_SSL
#  sasl:
#    mechanism: AWS_MSK_IAM
#    jaas:
#      config: software.amazon.msk.auth.iam.IAMLoginModule required;
#    client:
#      callback:
#        handler:
#          class: software.amazon.msk.auth.iam.IAMClientCallbackHandler

jackson:
  date-format: yyyy-MM-dd HH:mm:ss

opensearch:
  host: ${OPENSEARCH_HOST:search.books.dev.cogoport.io}
  user: ${OPENSEARCH_USER:books_search_dev}
  pass: ${OPENSEARCH_PASS:F20guhTISeCQ93nRaD@}

sentry:
  dsn: ${SENTRY_DSN:`https://10e833c953b04f429df6a6c8cae72c13@o435527.ingest.sentry.io/6475007`}

cogoport:
  api_url: https://api-mustangs1.dev.cogoport.io
  bearer_token: '7cff5415-6007-4bab-9f3e-e4a08c11e915'
